# coding: utf-8

"""
    Daytona Server API

    Daytona Server API

    The version of the OpenAPI document: v0.0.0-dev
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from daytonasdk.models.create_project_source_dto import CreateProjectSourceDTO

class TestCreateProjectSourceDTO(unittest.TestCase):
    """CreateProjectSourceDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateProjectSourceDTO:
        """Test CreateProjectSourceDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateProjectSourceDTO`
        """
        model = CreateProjectSourceDTO()
        if include_optional:
            return CreateProjectSourceDTO(
                repository = daytonasdk.models.git_repository.GitRepository(
                    branch = '', 
                    clone_target = 'branch', 
                    id = '', 
                    name = '', 
                    owner = '', 
                    path = '', 
                    pr_number = 56, 
                    sha = '', 
                    source = '', 
                    url = '', )
            )
        else:
            return CreateProjectSourceDTO(
                repository = daytonasdk.models.git_repository.GitRepository(
                    branch = '', 
                    clone_target = 'branch', 
                    id = '', 
                    name = '', 
                    owner = '', 
                    path = '', 
                    pr_number = 56, 
                    sha = '', 
                    source = '', 
                    url = '', ),
        )
        """

    def testCreateProjectSourceDTO(self):
        """Test CreateProjectSourceDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
