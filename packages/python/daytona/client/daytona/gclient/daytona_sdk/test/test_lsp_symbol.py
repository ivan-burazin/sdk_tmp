# coding: utf-8

"""
    Daytona Server API

    Daytona Server API

    The version of the OpenAPI document: v0.0.0-dev
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from daytona.gclient.daytona_sdk.models.lsp_symbol import LspSymbol

class TestLspSymbol(unittest.TestCase):
    """LspSymbol unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LspSymbol:
        """Test LspSymbol
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LspSymbol`
        """
        model = LspSymbol()
        if include_optional:
            return LspSymbol(
                kind = 56,
                location = daytona.gclient.daytona_sdk.models.lsp_location.LspLocation(
                    range = daytona.gclient.daytona_sdk.models.lsp_range.LspRange(
                        end = daytona.gclient.daytona_sdk.models.lsp_position.LspPosition(
                            character = 56, 
                            line = 56, ), 
                        start = daytona.gclient.daytona_sdk.models.lsp_position.LspPosition(
                            character = 56, 
                            line = 56, ), ), 
                    uri = '', ),
                name = ''
            )
        else:
            return LspSymbol(
                kind = 56,
                location = daytona.gclient.daytona_sdk.models.lsp_location.LspLocation(
                    range = daytona.gclient.daytona_sdk.models.lsp_range.LspRange(
                        end = daytona.gclient.daytona_sdk.models.lsp_position.LspPosition(
                            character = 56, 
                            line = 56, ), 
                        start = daytona.gclient.daytona_sdk.models.lsp_position.LspPosition(
                            character = 56, 
                            line = 56, ), ), 
                    uri = '', ),
                name = '',
        )
        """

    def testLspSymbol(self):
        """Test LspSymbol"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
