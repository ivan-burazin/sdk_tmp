# coding: utf-8

"""
    Daytona Server API

    Daytona Server API

    The version of the OpenAPI document: v0.0.0-dev
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from daytona.gclient.daytona_sdk.models.create_build_dto import CreateBuildDTO

class TestCreateBuildDTO(unittest.TestCase):
    """CreateBuildDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateBuildDTO:
        """Test CreateBuildDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateBuildDTO`
        """
        model = CreateBuildDTO()
        if include_optional:
            return CreateBuildDTO(
                branch = '',
                env_vars = {
                    'key' : ''
                    },
                prebuild_id = '',
                project_config_name = ''
            )
        else:
            return CreateBuildDTO(
                branch = '',
                env_vars = {
                    'key' : ''
                    },
                project_config_name = '',
        )
        """

    def testCreateBuildDTO(self):
        """Test CreateBuildDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
