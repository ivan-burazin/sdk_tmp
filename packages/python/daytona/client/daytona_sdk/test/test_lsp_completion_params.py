# coding: utf-8

"""
    Daytona Server API

    Daytona Server API

    The version of the OpenAPI document: v0.0.0-dev
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from daytona_sdk.models.lsp_completion_params import LspCompletionParams

class TestLspCompletionParams(unittest.TestCase):
    """LspCompletionParams unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LspCompletionParams:
        """Test LspCompletionParams
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LspCompletionParams`
        """
        model = LspCompletionParams()
        if include_optional:
            return LspCompletionParams(
                context = daytona_sdk.models.completion_context.CompletionContext(
                    trigger_character = '', 
                    trigger_kind = 56, ),
                language_id = '',
                path_to_project = '',
                position = daytona_sdk.models.position.Position(
                    character = 56, 
                    line = 56, ),
                uri = ''
            )
        else:
            return LspCompletionParams(
                language_id = '',
                path_to_project = '',
                position = daytona_sdk.models.position.Position(
                    character = 56, 
                    line = 56, ),
                uri = '',
        )
        """

    def testLspCompletionParams(self):
        """Test LspCompletionParams"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
