# coding: utf-8

"""
    Daytona Server API

    Daytona Server API

    The version of the OpenAPI document: v0.0.0-dev
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from daytona_sdk.models.server_config import ServerConfig

class TestServerConfig(unittest.TestCase):
    """ServerConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ServerConfig:
        """Test ServerConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ServerConfig`
        """
        model = ServerConfig()
        if include_optional:
            return ServerConfig(
                api_port = 56,
                binaries_path = '',
                build_image_namespace = '',
                builder_image = '',
                builder_registry_server = '',
                default_project_image = '',
                default_project_user = '',
                frps = daytona_sdk.models.frps_config.FRPSConfig(
                    domain = '', 
                    port = 56, 
                    protocol = '', ),
                headscale_port = 56,
                id = '',
                local_builder_registry_image = '',
                local_builder_registry_port = 56,
                log_file = daytona_sdk.models.log_file_config.LogFileConfig(
                    compress = True, 
                    local_time = True, 
                    max_age = 56, 
                    max_backups = 56, 
                    max_size = 56, 
                    path = '', ),
                providers_dir = '',
                registry_url = '',
                samples_index_url = '',
                server_download_url = ''
            )
        else:
            return ServerConfig(
                api_port = 56,
                binaries_path = '',
                builder_image = '',
                builder_registry_server = '',
                default_project_image = '',
                default_project_user = '',
                headscale_port = 56,
                id = '',
                local_builder_registry_image = '',
                local_builder_registry_port = 56,
                log_file = daytona_sdk.models.log_file_config.LogFileConfig(
                    compress = True, 
                    local_time = True, 
                    max_age = 56, 
                    max_backups = 56, 
                    max_size = 56, 
                    path = '', ),
                providers_dir = '',
                registry_url = '',
                server_download_url = '',
        )
        """

    def testServerConfig(self):
        """Test ServerConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
