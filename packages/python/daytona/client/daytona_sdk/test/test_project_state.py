# coding: utf-8

"""
    Daytona Server API

    Daytona Server API

    The version of the OpenAPI document: v0.0.0-dev
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from daytona_sdk.models.project_state import ProjectState

class TestProjectState(unittest.TestCase):
    """ProjectState unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProjectState:
        """Test ProjectState
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProjectState`
        """
        model = ProjectState()
        if include_optional:
            return ProjectState(
                git_status = daytona_sdk.models.git_status.GitStatus(
                    ahead = 56, 
                    behind = 56, 
                    branch_published = True, 
                    current_branch = '', 
                    file_status = [
                        daytona_sdk.models.file_status.FileStatus(
                            extra = '', 
                            name = '', 
                            staging = 'Unmodified', 
                            worktree = 'Unmodified', )
                        ], ),
                updated_at = '',
                uptime = 56
            )
        else:
            return ProjectState(
                updated_at = '',
                uptime = 56,
        )
        """

    def testProjectState(self):
        """Test ProjectState"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
