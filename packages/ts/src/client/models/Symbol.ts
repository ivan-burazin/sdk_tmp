/* tslint:disable */
/* eslint-disable */
/**
 * Daytona Server API
 * Daytona Server API
 *
 * The version of the OpenAPI document: v0.0.0-dev
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Symbol
 */
export interface Symbol {
    /**
     * 
     * @type {string}
     * @memberof Symbol
     */
    content?: string;
    /**
     * 
     * @type {string}
     * @memberof Symbol
     */
    file?: string;
    /**
     * 
     * @type {number}
     * @memberof Symbol
     */
    line?: number;
}

/**
 * Check if a given object implements the Symbol interface.
 */
export function instanceOfSymbol(value: object): value is Symbol {
    return true;
}

export function SymbolFromJSON(json: any): Symbol {
    return SymbolFromJSONTyped(json, false);
}

export function SymbolFromJSONTyped(json: any, ignoreDiscriminator: boolean): Symbol {
    if (json == null) {
        return json;
    }
    return {
        
        'content': json['content'] == null ? undefined : json['content'],
        'file': json['file'] == null ? undefined : json['file'],
        'line': json['line'] == null ? undefined : json['line'],
    };
}

export function SymbolToJSON(json: any): Symbol {
    return SymbolToJSONTyped(json, false);
}

export function SymbolToJSONTyped(value?: Symbol | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'content': value['content'],
        'file': value['file'],
        'line': value['line'],
    };
}

