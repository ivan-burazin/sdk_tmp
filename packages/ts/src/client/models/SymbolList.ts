/* tslint:disable */
/* eslint-disable */
/**
 * Daytona Server API
 * Daytona Server API
 *
 * The version of the OpenAPI document: v0.0.0-dev
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Symbol } from './Symbol';
import {
    SymbolFromJSON,
    SymbolFromJSONTyped,
    SymbolToJSON,
    SymbolToJSONTyped,
} from './Symbol';

/**
 * 
 * @export
 * @interface SymbolList
 */
export interface SymbolList {
    /**
     * 
     * @type {Array<Symbol>}
     * @memberof SymbolList
     */
    symbols?: Array<Symbol>;
}

/**
 * Check if a given object implements the SymbolList interface.
 */
export function instanceOfSymbolList(value: object): value is SymbolList {
    return true;
}

export function SymbolListFromJSON(json: any): SymbolList {
    return SymbolListFromJSONTyped(json, false);
}

export function SymbolListFromJSONTyped(json: any, ignoreDiscriminator: boolean): SymbolList {
    if (json == null) {
        return json;
    }
    return {
        
        'symbols': json['symbols'] == null ? undefined : ((json['symbols'] as Array<any>).map(SymbolFromJSON)),
    };
}

export function SymbolListToJSON(json: any): SymbolList {
    return SymbolListToJSONTyped(json, false);
}

export function SymbolListToJSONTyped(value?: SymbolList | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'symbols': value['symbols'] == null ? undefined : ((value['symbols'] as Array<any>).map(SymbolToJSON)),
    };
}

